#!/bin/bash

set -e


sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl

sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl


cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

#kubelet does not work unless you disable swap
sudo swapoff -a
#make swap disable persistent
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab


# assure containernetwork-plugins are removed
sudo apt-get purge containernetworking-plugins

#kubeadm
sudo kubeadm init --config=kubeadm-config.yaml --apiserver-advertise-address=192.168.1.134 --pod-network-cidr=10.244.0.0/16 --cri-socket=/run/containerd/containerd.sock
#enable cri on config.tom created by containerd

#check kubelet status
systemctl enable kubelet
systemctl status kubelet && journalctl -xeu kubelet

#deploy cni and check CIDR is equivalent to the one in the yml file
kubectl apply -f kube-flannel.yml

#use ctrl plane node as worker as well
kubectl taint nodes --all node-role.kubernetes.io/master-
#kubectl taint nodes --all node.kubernetes.io/not-ready-

#clean k8s cluster
kubectl drain <node name> --delete-emptydir-data --force --ignore-daemonsets
kubeadm reset
rm -rf .kube/
sudo rm -rf /etc/kubernetes/
sudo rm -rf /var/lib/kubelet/
sudo rm -rf /var/lib/etcd
